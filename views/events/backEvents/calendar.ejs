<% layout('layouts/boilerplate')%>
<link rel="stylesheet" href="/css/styles.css">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<body class="d-flex flex-column">

  <h1 class="btn-login">اضافة مواعيد العودة</h1>

  <!-- Calendar Navigation -->
  <div class="calendar-nav">
    <button id="prev-month" class="btn">السابق</button>
    <span id="current-month"></span>
    <button id="next-month" class="btn">التالي</button>
  </div>
  
  <!-- Calendar Table -->
  <table id="calendar"></table>
<!-- Event List Section -->
<h2><span id="selected-date"></span></h2>
<div id="event-list">
  <!-- Events will be dynamically populated here -->
</div>

<div>
  <a class="btn" href="/backEvents/add-event">اضافة ميعاد جديد</a>
</div>

<script>
  $(document).ready(function() {
    let currentDate = new Date();
    let datesWithEvents = []; // Initialize as an empty array

    // Function to format the date as YYYY-MM-DD
    function formatDate(date) {
      const year = date.getFullYear();
      const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-based
      const day = String(date.getDate()).padStart(2, '0');
      return `${year}-${month}-${day}`;
    }

    // Function to render the calendar for the given month and year
    function renderCalendar(date) {
      const year = date.getFullYear();
      const month = date.getMonth();

      $('#current-month').text(new Intl.DateTimeFormat('en-US', { month: 'long', year: 'numeric' }).format(date));

      const firstDay = new Date(year, month, 1).getDay();
      const daysInMonth = new Date(year, month + 1, 0).getDate();

      $('#calendar').empty();
      let calendarHTML = '<tr>';
      const daysOfWeek = ['الأحد', 'الأثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'];
      for (let day of daysOfWeek) {
        calendarHTML += `<th>${day}</th>`;
      }
      calendarHTML += '</tr><tr>';

      for (let i = 0; i < firstDay; i++) {
        calendarHTML += '<td></td>';
      }

      for (let day = 1; day <= daysInMonth; day++) {
        if ((firstDay + day - 1) % 7 === 0 && day !== 1) {
          calendarHTML += '</tr><tr>';
        }
        const dayDate = new Date(year, month, day);
        const formattedDate = formatDate(dayDate);
        const hasEvent = datesWithEvents.includes(formattedDate) ? 'has-event' : '';
        calendarHTML += `<td class="day ${hasEvent}" data-date="${formattedDate}">${day}</td>`;
      }

      calendarHTML += '</tr>';
      $('#calendar').append(calendarHTML);

      // Attach click event to fetch events for the selected day
      $('.day').click(function() {
        const selectedDate = $(this).data('date');
        $('#selected-date').text(selectedDate);
        $('#event-list').empty();
        $.ajax({
          url: `/backEvents/events/${selectedDate}`,  // Backend route to get events for the date
          method: 'GET',
          success: function(data) {
            if (data.events.length > 0) {
              data.events.forEach(function(event) {
                $('#event-list').append(`
                  <div class="event-card">
                    <h3>${event.title}</h3>
                    <p><strong>الوقت:</strong> ${convertTo12HourFormat(event.time)}</p>
                    <p><strong>الملاحظات: </strong>${event.notice}</p>
                    <form class="button-form" action="/backEvents/edit-event/${event._id}" method="GET">
                      <button class="edit" type="submit">تعديل</button>
                    </form>
                    <form class="button-form" action="/backEvents/delete-event/${event._id}" method="POST">
                      <button class="delete" type="submit">مسح</button>
                    </form>
                  </div>
                `);
              });
            } else {
              $('#event-list').append('<div class="event-card"><p>لا يوجد مواعيد لهذا اليوم</p></div>');
            }
          }
        });
      });
    }

    // Fetch dates with events for the current month
    function fetchDatesWithEvents() {
      $.ajax({
        url: '/backEvents/dates-with-events', // Endpoint to get dates with events
        method: 'GET',
        success: function(data) {
          datesWithEvents = data.datesWithEvents || []; // Ensure datesWithEvents is an array
          console.log('Dates with events:', datesWithEvents); // Debug statement
          renderCalendar(currentDate); // Re-render calendar with event indicators
        },
        error: function() {
          console.error('Failed to fetch dates with events');
          datesWithEvents = []; // Ensure datesWithEvents is an array in case of error
          renderCalendar(currentDate); // Re-render calendar even if no data
        }
      });
    }

    // Convert time from 24-hour to 12-hour format
    function convertTo12HourFormat(time) {
      const [hours, minutes] = time.split(':');
      const ampm = hours >= 12 ? 'PM' : 'AM';
      const adjustedHours = hours % 12 || 12;
      return `${adjustedHours}:${minutes} ${ampm}`;
    }

    // Initial render of calendar
    fetchDatesWithEvents();

    // Navigate to the previous month
    $('#prev-month').click(function() {
      currentDate.setMonth(currentDate.getMonth() - 1);
      fetchDatesWithEvents();
    });

    // Navigate to the next month
    $('#next-month').click(function() {
      currentDate.setMonth(currentDate.getMonth() + 1);
      fetchDatesWithEvents();
    });
  });
</script>

</body>